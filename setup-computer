#!/bin/bash

# Determine OS
which pacman > /dev/null 2> /dev/null
ARCH=$?
which apt-get > /dev/null 2> /dev/null
DEBIAN=$?
UBUNTU=$DEBIAN
if [ `uname -s` = "Darwin" ]; then
	MAC=0
fi

# Determine X64 or X86
X64=true
if [[ `uname -m` == i* ]]; then
	X64=false
fi

# Script stops executing if any command returns a non-zero code
set -e

# Introduce appropriate script.
# Whichever platform we determine we are running on will have
# its environment variable = 0.
if [ $ARCH -eq 0 ]; then
	echo "You are running Arch Linux."
elif [ $DEBIAN -eq 0 ]; then
	echo "You are running Debian Linux."
elif [ $UBUNTU -eq 0 ]; then
	echo "You are running Ubuntu Linux."
elif [ $MAC -eq 0 ]; then
	echo "You are running Mac OS X."
else
	echo "ERROR: Script cannot identify which OS you are running."
	echo "Please fix this script and run it again."
	exit 1
fi

# Challenge sudo
echo "You must be a sudoer to run this script. Prove it."
sudo echo "sudo SUCCESS."


# Run all necessary apt-gets
echo
echo "Installing software..."
if [ $ARCH -eq 0 ]; then
	sudo pacman -Syu
	sudo pacman -S $(< resources/linux/install_lists/arch.txt)
elif [ $MAC -ne 0 ]; then
	sudo apt-get update
	sudo apt-get install $(< resources/linux/install_lists/debian.txt)
fi
echo "SUCCESS"
echo 


# Install anything additional
echo
echo "Installing additional things..."
if [ $DEBIAN -eq 0 ] || [ $UBUNTU -eq 0 ]; then
	echo -e "\tinstalling pathogen - "
	mkdir -p ~/.vim/autoload ~/.vim/bundle
	curl -Sso ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
	echo -e "\tinstalling surround - "
	if [ ! -d ~/.vim/bundle/vim-surround ]; then
		cd ~/.vim/bundle/
		git clone git://github.com/tpope/vim-surround.git
		cd -
	fi
	echo -e "\tinstalling tComment - "
	if [ ! -d ~/.vim/bundle/tcomment_vim ]; then
		cd ~/.vim/bundle/
		git clone git://github.com/tomtom/tcomment_vim.git
		cd -
	fi
fi
if [ $MAC -ne 0 ]; then
	echo -e "\tinstalling dropbox - "
	if [ ! -d ~/Dropbox ]; then
		cd ~
		if $X64; then
			wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
		else
			wget -O - "https://www.dropbox.com/download?plat=lnx.x86" | tar xzf -
		fi
		~/.dropbox-dist/dropboxd &
		cd -
	fi
	sudo cp resources/mac/dropbox.py /usr/bin/dropbox
fi
echo "SUCCESS"
echo

# Copy necessary resources
echo
echo "Installing resources..."

echo -e "\tcopying vimrc to home - "
cp -n resources/all/vimrc ~/.vimrc

echo -e "\tcopying cscope_maps.vim to home - "
mkdir -p ~/.vim/plugin
cp -n resources/all/cscope_maps.vim ~/.vim/plugin

echo -e "\tcopying ssh keys to home - "
cp -n -r resources/all/ssh ~/.ssh

echo -e "\tcopying indent.pro to home - "
cp -n resources/all/indent.pro ~/.indent.pro

echo -e "\tcopying bashrc to home - "
test $MAC -ne 0 && cp -n resources/linux/bashrc ~/.bashrc
test $MAC -eq 0 && cp -n resources/mac/bashrc ~/.bashrc

echo -e "\tcopying bash_aliases to home - "
test $MAC -ne 0 && cp -n resources/linux/bash_aliases ~/.bash_aliases
test $MAC -eq 0 && cp -n resources/mac/bash_aliases ~/.bash_aliases

echo "SUCCESS"
echo

# Delete dumb resources
if [ $DEBIAN -eq 0 ]; then
	echo
	echo "Deleteing dumb resources..."
	echo -e "\tvarious dirs in home - "
	rm -rf ~/Pictures ~/Videos ~/Documents ~/Music ~/Public ~/Templates
	echo "SUCCESS"
	echo
fi

# Configure git
if [ $MAC -ne 0 ]; then
	echo
	echo "Configuring git..."
	git config --global user.name "Jordan Place"
	git config --global user.email "tapman90@gmail.com"
	git config --global credential.helper cache
	echo "SUCCESS"
	echo
fi

exit 0
